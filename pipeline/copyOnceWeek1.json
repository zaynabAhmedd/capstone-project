{
	"name": "copyOnceWeek1",
	"properties": {
		"activities": [
			{
				"name": "Until-1",
				"description": "executes a set of activities in a loop until the condition associated with the activity evaluates to true.",
				"type": "Until",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@bool(variables('FileAvailable'))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Get Metadata from users",
							"description": "Are there any files available?",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "User_d",
									"type": "DatasetReference"
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get Metadata from users",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Get Metadata from postType",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@activity('Get Metadata from users').output.exists\n",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Wait1",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 120
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Set variable1",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "FileAvailable",
											"value": "True"
										}
									}
								]
							}
						},
						{
							"name": "Get Metadata from postType",
							"description": "Are there any files available?",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "Posttyp_d",
									"type": "DatasetReference"
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			},
			{
				"name": "Copy data posttype",
				"description": "copy table from the Postgres",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Delete posttype table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "PostgreSqlV2Source"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "postTypes_s",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Posttyp_d",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Delete posttype table",
				"description": "Delete the posttype tables so that they are not repeated every time they are updated",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Until-1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Posttyp_d",
						"type": "DatasetReference"
					},
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "ls_my_blob",
							"type": "LinkedServiceReference"
						},
						"path": "bd-project/ExtractedData/delete"
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Copy data users",
				"description": "copy table from the Postgres",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Delete users tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "PostgreSqlV2Source"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Users_s",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "User_d",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Delete users tables",
				"description": "Delete the users tables so that they are not repeated every time they are updated",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Until-1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "User_d",
						"type": "DatasetReference"
					},
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "ls_my_blob",
							"type": "LinkedServiceReference"
						},
						"path": "bd-project/ExtractedData/delete"
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			}
		],
		"variables": {
			"FileAvailable": {
				"type": "String",
				"defaultValue": "false"
			}
		},
		"folder": {
			"name": "After improvement"
		},
		"annotations": []
	}
}