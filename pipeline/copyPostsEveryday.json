{
	"name": "copyPostsEveryday",
	"properties": {
		"description": "For this pipeline, will be used for copy daily Posts parquet files from WCD's public blob storage to our storage",
		"activities": [
			{
				"name": "Delete post files",
				"description": "Delete the post files so that they are not repeated every time they are updated",
				"type": "Delete",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Post_d",
						"type": "DatasetReference"
					},
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "ls_my_blob",
							"type": "LinkedServiceReference"
						},
						"path": "bd-project/ExtractedData/delete"
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Copy post files",
				"description": "copy Posts parquet files from WCD's blob storage to our blob storage",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Delete post files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*.parquet",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "ParquetReadSettings"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Posts_s",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Post_d",
						"type": "DatasetReference"
					}
				]
			}
		],
		"folder": {
			"name": "capstone-project-pipelines"
		},
		"annotations": []
	}
}